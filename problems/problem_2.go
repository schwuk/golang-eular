/*
Solution to problem 1 in Project Euler: http://projecteuler.net/problem=1

Copyright (C) 2013  David Murphy <dave@schwuk.com>

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.

*/
package main

import (
    "fmt"
    "math"
)

// Solution to problem 2 in Project Euler: http://projecteuler.net/problem=2
//
// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.
func Solution() (total int) {
    total = 0

    for a, b := 0, 1; a < 4000000; a, b = b, a+b {
        if math.Mod(float64(a), 2) == 0 {
            total += a
        }
    }

    return
}



func main() {
    fmt.Println(Solution())
}
